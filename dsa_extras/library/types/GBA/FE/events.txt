# Types needed for event codes.

type Inventory
    8 first values:ItemID
    8 second values:ItemID
    8 third values:ItemID
    8 fourth values:ItemID # TODO: allow for default 0 values.

type Phase
    # Used for turn-based events to indicate when in the turn the event happens.
    6:0
    2 phase values:phase

enum phase
    0 player
    1 npc
    2 enemy
    # Engine seems to support a 4th unused faction?

type Turn
    # Used for turn-based events to indicate which turns the event happens on.
    # Similar to coordinates but special names are used.
    8 first values:first base:10
    8 period values:period base:10

enum first
    : on
    :

enum period
    0 once
    : every
    :

# Various coordinate types.
type ByteCoord
    8 x values:xcoord base:10
    8 y values:ycoord base:10

type HexByteCoord
    8 x values:xcoord
    8 y values:ycoord

type PairCoord
    16 x values:xcoord base:10
    16 y values:ycoord base:10

type SignedPairCoord
    16 x values:xcoord base:10 signed
    16 y values:ycoord base:10 signed

type HexPairCoord
    16 x values:xcoord
    16 y values:ycoord

type QuadCoord
    32 x values:xcoord base:10
    32 y values:ycoord base:10

# FE8-specific
type FlaggedCoord
    6 x values:xcoord base:10 signed
    6 y values:xcoord base:10 signed
    4 flags values:CoordFlags

flags CoordFlags
    a # TODO: figure out proper names for these.
    b
    c
    d

# Label coordinate values as x/y in disassembly; don't require it in assembly.
enum xcoord
    : x
    :

enum ycoord
    : y
    :